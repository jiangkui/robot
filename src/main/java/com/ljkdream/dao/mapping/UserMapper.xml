<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ljkdream.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.ljkdream.model.User">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="cid" property="cid" jdbcType="BIGINT"/>
        <result column="uid" property="uid" jdbcType="VARCHAR"/>
        <result column="nickname" property="nickname" jdbcType="VARCHAR"/>
        <result column="IPAddress" property="ipaddress" jdbcType="VARCHAR"/>
        <result column="avatarName" property="avatarname" jdbcType="VARCHAR"/>
        <result column="avatarPrefix" property="avatarprefix" jdbcType="VARCHAR"/>
        <result column="IP" property="ip" jdbcType="VARCHAR"/>
        <result column="mobile" property="mobile" jdbcType="VARCHAR"/>
        <result column="freeCoin" property="freecoin" jdbcType="VARCHAR"/>
        <result column="isFirstLogin" property="isfirstlogin" jdbcType="VARCHAR"/>
        <result column="coin" property="coin" jdbcType="VARCHAR"/>
        <result column="bonusNum" property="bonusnum" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, cid, uid, nickname, IPAddress, avatarName, avatarPrefix, IP, mobile, freeCoin, 
    isFirstLogin, coin, bonusNum
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ljkdream.model.UserExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <delete id="deleteByExample" parameterType="com.ljkdream.model.UserExample">
        delete from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.ljkdream.model.User">
    insert into user (id, cid, uid, nickname, 
      IPAddress, avatarName, avatarPrefix, 
      IP, mobile, freeCoin, 
      isFirstLogin, coin, bonusNum
      )
    values (#{id,jdbcType=BIGINT}, #{cid,jdbcType=BIGINT}, #{uid,jdbcType=VARCHAR}, #{nickname,jdbcType=VARCHAR}, 
      #{ipaddress,jdbcType=VARCHAR}, #{avatarname,jdbcType=VARCHAR}, #{avatarprefix,jdbcType=VARCHAR}, 
      #{ip,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{freecoin,jdbcType=VARCHAR}, 
      #{isfirstlogin,jdbcType=VARCHAR}, #{coin,jdbcType=VARCHAR}, #{bonusnum,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.ljkdream.model.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="cid != null">
                cid,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="nickname != null">
                nickname,
            </if>
            <if test="ipaddress != null">
                IPAddress,
            </if>
            <if test="avatarname != null">
                avatarName,
            </if>
            <if test="avatarprefix != null">
                avatarPrefix,
            </if>
            <if test="ip != null">
                IP,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="freecoin != null">
                freeCoin,
            </if>
            <if test="isfirstlogin != null">
                isFirstLogin,
            </if>
            <if test="coin != null">
                coin,
            </if>
            <if test="bonusnum != null">
                bonusNum,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="cid != null">
                #{cid,jdbcType=BIGINT},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="ipaddress != null">
                #{ipaddress,jdbcType=VARCHAR},
            </if>
            <if test="avatarname != null">
                #{avatarname,jdbcType=VARCHAR},
            </if>
            <if test="avatarprefix != null">
                #{avatarprefix,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                #{ip,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="freecoin != null">
                #{freecoin,jdbcType=VARCHAR},
            </if>
            <if test="isfirstlogin != null">
                #{isfirstlogin,jdbcType=VARCHAR},
            </if>
            <if test="coin != null">
                #{coin,jdbcType=VARCHAR},
            </if>
            <if test="bonusnum != null">
                #{bonusnum,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.ljkdream.model.UserExample" resultType="java.lang.Integer">
        select count(*) from user
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=BIGINT},
            </if>
            <if test="record.cid != null">
                cid = #{record.cid,jdbcType=BIGINT},
            </if>
            <if test="record.uid != null">
                uid = #{record.uid,jdbcType=VARCHAR},
            </if>
            <if test="record.nickname != null">
                nickname = #{record.nickname,jdbcType=VARCHAR},
            </if>
            <if test="record.ipaddress != null">
                IPAddress = #{record.ipaddress,jdbcType=VARCHAR},
            </if>
            <if test="record.avatarname != null">
                avatarName = #{record.avatarname,jdbcType=VARCHAR},
            </if>
            <if test="record.avatarprefix != null">
                avatarPrefix = #{record.avatarprefix,jdbcType=VARCHAR},
            </if>
            <if test="record.ip != null">
                IP = #{record.ip,jdbcType=VARCHAR},
            </if>
            <if test="record.mobile != null">
                mobile = #{record.mobile,jdbcType=VARCHAR},
            </if>
            <if test="record.freecoin != null">
                freeCoin = #{record.freecoin,jdbcType=VARCHAR},
            </if>
            <if test="record.isfirstlogin != null">
                isFirstLogin = #{record.isfirstlogin,jdbcType=VARCHAR},
            </if>
            <if test="record.coin != null">
                coin = #{record.coin,jdbcType=VARCHAR},
            </if>
            <if test="record.bonusnum != null">
                bonusNum = #{record.bonusnum,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user
        set id = #{record.id,jdbcType=BIGINT},
        cid = #{record.cid,jdbcType=BIGINT},
        uid = #{record.uid,jdbcType=VARCHAR},
        nickname = #{record.nickname,jdbcType=VARCHAR},
        IPAddress = #{record.ipaddress,jdbcType=VARCHAR},
        avatarName = #{record.avatarname,jdbcType=VARCHAR},
        avatarPrefix = #{record.avatarprefix,jdbcType=VARCHAR},
        IP = #{record.ip,jdbcType=VARCHAR},
        mobile = #{record.mobile,jdbcType=VARCHAR},
        freeCoin = #{record.freecoin,jdbcType=VARCHAR},
        isFirstLogin = #{record.isfirstlogin,jdbcType=VARCHAR},
        coin = #{record.coin,jdbcType=VARCHAR},
        bonusNum = #{record.bonusnum,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.ljkdream.model.User">
        update user
        <set>
            <if test="cid != null">
                cid = #{cid,jdbcType=BIGINT},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=VARCHAR},
            </if>
            <if test="nickname != null">
                nickname = #{nickname,jdbcType=VARCHAR},
            </if>
            <if test="ipaddress != null">
                IPAddress = #{ipaddress,jdbcType=VARCHAR},
            </if>
            <if test="avatarname != null">
                avatarName = #{avatarname,jdbcType=VARCHAR},
            </if>
            <if test="avatarprefix != null">
                avatarPrefix = #{avatarprefix,jdbcType=VARCHAR},
            </if>
            <if test="ip != null">
                IP = #{ip,jdbcType=VARCHAR},
            </if>
            <if test="mobile != null">
                mobile = #{mobile,jdbcType=VARCHAR},
            </if>
            <if test="freecoin != null">
                freeCoin = #{freecoin,jdbcType=VARCHAR},
            </if>
            <if test="isfirstlogin != null">
                isFirstLogin = #{isfirstlogin,jdbcType=VARCHAR},
            </if>
            <if test="coin != null">
                coin = #{coin,jdbcType=VARCHAR},
            </if>
            <if test="bonusnum != null">
                bonusNum = #{bonusnum,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ljkdream.model.User">
    update user
    set cid = #{cid,jdbcType=BIGINT},
      uid = #{uid,jdbcType=VARCHAR},
      nickname = #{nickname,jdbcType=VARCHAR},
      IPAddress = #{ipaddress,jdbcType=VARCHAR},
      avatarName = #{avatarname,jdbcType=VARCHAR},
      avatarPrefix = #{avatarprefix,jdbcType=VARCHAR},
      IP = #{ip,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      freeCoin = #{freecoin,jdbcType=VARCHAR},
      isFirstLogin = #{isfirstlogin,jdbcType=VARCHAR},
      coin = #{coin,jdbcType=VARCHAR},
      bonusNum = #{bonusnum,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>